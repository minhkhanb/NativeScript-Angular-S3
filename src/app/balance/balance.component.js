"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nativescript_angular_1 = require("nativescript-angular");
var page_1 = require("tns-core-modules/ui/page");
var BalanceComponent = /** @class */ (function () {
    function BalanceComponent(routerExtensions, page) {
        this.routerExtensions = routerExtensions;
        this.page = page;
        this.page.actionBarHidden = true;
    }
    BalanceComponent.prototype.ngOnInit = function () {
        this.currentMonth = [{
                Day: "1",
                Amount: 51
            },
            {
                Day: "10",
                Amount: 20
            },
            {
                Day: "15",
                Amount: 89
            },
            {
                Day: "20",
                Amount: 110
            }
        ];
        this.lastMonth = [{
                Day: "1",
                Amount: 60
            },
            {
                Day: "10",
                Amount: 50
            },
            {
                Day: "15",
                Amount: 91
            },
            {
                Day: "20",
                Amount: 95
            },
            {
                Day: "31",
                Amount: 160
            }
        ];
        var currentDate = new Date();
        var day = currentDate.getDay();
        var date = currentDate.getDate();
        var year = currentDate.getFullYear();
        var weekdays = new Array(7);
        weekdays[0] = "Sunday";
        weekdays[1] = "Monday";
        weekdays[2] = "Tuesday";
        weekdays[3] = "Wednesday";
        weekdays[4] = "Thursday";
        weekdays[5] = "Friday";
        weekdays[6] = "Saturday";
        var dayName = weekdays[day];
        this.day = dayName;
        this.date = date;
        this.year = year;
        var month = new Array();
        month[0] = "January";
        month[1] = "February";
        month[2] = "March";
        month[3] = "April";
        month[4] = "May";
        month[5] = "June";
        month[6] = "July";
        month[7] = "August";
        month[8] = "September";
        month[9] = "October";
        month[10] = "November";
        month[11] = "December";
        var monthName = month[currentDate.getMonth()];
        this.month = monthName;
    };
    BalanceComponent.prototype.goToTodayPage = function () {
        this.routerExtensions.navigate(["today/"], {
            animated: true,
            transition: {
                name: "fade",
                duration: 380,
                curve: "spring"
            },
            clearHistory: true
        });
    };
    BalanceComponent.prototype.goToBalancePage = function () {
        this.routerExtensions.navigate(["balance/"], {
            animated: true,
            transition: {
                name: "fade",
                duration: 380,
                curve: "spring"
            },
            clearHistory: true
        });
    };
    BalanceComponent.prototype.goToCalendarPage = function () {
        this.routerExtensions.navigate(["calendar/"], {
            animated: true,
            transition: {
                name: "fade",
                duration: 380,
                curve: "spring"
            },
            clearHistory: true
        });
    };
    BalanceComponent = __decorate([
        core_1.Component({
            selector: "Balance",
            moduleId: module.id,
            templateUrl: "./balance.component.html"
        }),
        __metadata("design:paramtypes", [nativescript_angular_1.RouterExtensions, page_1.Page])
    ], BalanceComponent);
    return BalanceComponent;
}());
exports.BalanceComponent = BalanceComponent;
//# sourceMappingURL=data:application/json;base64,